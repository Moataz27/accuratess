type Mutation {
	login(input: LoginInput!): UserWithToken!
	saveShipment(input: ShipmentInput!): Shipment
}

type Query {
	listZonesDropdown(input: ListZonesFilterInput): [DropDownEntry]
	listCountriesDropdown: [DropDownEntry]!
	listPaymentTypesDropdown(
		input: ListPaymentTypesDropdownInput
	): [DropDownEntry]
	shipment(id: Int, code: String): Shipment
	listShipments(
		input: ListShipmentsFilterInput

		"""
		Limits number of fetched items. Maximum allowed value: 100.
		"""
		first: Int! = 10

		"""
		The offset from which items are returned.
		"""
		page: Int
	): ShipmentPaginator!
	listLookupEntriesDropdown(
		"""
		Code in ListLookupEntriesFilterInput for Dropdown used for Save Shipment
		SHP_PRICE_TYPE 		=> for list price type,
		SHP_OPEN_PACKAGE 	=> for list package openable
		"""
		input: ListLookupEntriesFilterInput!
	): [DropDownEntry]
	listShippingServicesDropdown(
		input: ListShippingServicesFilterInput
	): [DropDownEntry]!
	calculateShipmentFees(input: CalculateShipmentFeesInput!): ShipmentFees!
	listShipmentTypesDropdown(
		serviceId: Int
		mobileActive: Boolean
	): [DropDownEntry]
}
scalar DateTime

scalar Date

scalar Time

scalar Upload

type ShipmentFees {
	amount: Float!
	delivery: Float!
	weight: Float!
	collection: Float!
	post: Float!
	tax: Float!
	return: Float!
	total: Float!
}

input ListPaymentTypesDropdownInput {
	customerId: Int
}

input CalculateShipmentFeesInput {
	customerTypeCode: CustomerTypeCode
	serviceId: Int!
	weight: Float!
	senderZoneId: Int
	senderSubzoneId: Int
	recipientZoneId: Int!
	recipientSubzoneId: Int!
	size: BoxSizeInput
	customerId: Int
	price: Float!
	priceTypeCode: ShipmentPriceTypeCode
	paymentTypeCode: ShipmentPaymentTypeCode
}

type Image {
	path: String!
	subjectCode: String
}

input ListShippingServicesFilterInput {
	customerTypeCode: CustomerTypeCode
	customerId: Int
	active: Boolean
}

"""
Information about pagination using a fully featured paginator.
"""
type PaginatorInfo {
	"""
	Number of items in the current page.
	"""
	count: Int!

	"""
	Index of the current page.
	"""
	currentPage: Int!

	"""
	Index of the first item in the current page.
	"""
	firstItem: Int

	"""
	Are there more pages after this one?
	"""
	hasMorePages: Boolean!

	"""
	Index of the last item in the current page.
	"""
	lastItem: Int

	"""
	Index of the last available page.
	"""
	lastPage: Int!

	"""
	Number of items per page.
	"""
	perPage: Int!

	"""
	Number of total available items.
	"""
	total: Int!
}

input ImageInput {
	"""
	file Uploaded
	"""
	# file: Upload!
	subjectCode: String
}

"""
A paginated list of Shipment items.
"""
type ShipmentPaginator {
	"""
	Pagination information about the list of items.
	"""
	paginatorInfo: PaginatorInfo!

	"""
	A list of Shipment items.
	"""
	data: [Shipment!]!
}

input ListShipmentsFilterInput {
	id: [Int]
	code: [String]
	search: String
	refNumber: [String]
	typeCode: ShipmentTypeCode
	paymentTypeCode: ShipmentPaymentTypeCode
	customerTypeCode: CustomerTypeCode
	branchId: Int
	originBranchId: Int
	serviceId: Int
	customerId: Int
	userId: Int
	inDeliveryAgentCustody: DeliveryAgentCustodyInput
	senderZoneId: [Int]
	senderSubzoneId: [Int]
	recipientZoneId: [Int]
	recipientSubzoneId: [Int]
	date: DateFilterInput
	lastTransactionDate: DateFilterInput
	deliveredOrReturnedDate: DateFilterInput
	statusCode: [ShipmentStatusCode]
	deliveryTypeCode: ShipmentDeliveryTypeCode
	returnTypeCode: ShipmentReturnTypeCode
	pendingCustomerAdjusting: Boolean
	pendingCustomerPayment: Boolean
	notDelivered: Boolean
	collected: Boolean
	paid: Boolean
	delivered: Boolean
	inWarehouse: Boolean
	forUnpacking: Boolean
	pendingCollection: Boolean
	lastDeliveryAgentId: Int
	deliveryBefore: Date
	sectionId: Int
	hasProducts: Boolean
	new: Boolean
	cancelled: Boolean
	routeId: [Int]
}

input DeliveryAgentCustodyInput {
	deliveryAgentId: Int
}

"""
Shipment return type code
"""
enum ShipmentReturnTypeCode {
	"""
	Ffc
	"""
	FFC

	"""
	Fpc
	"""
	FPC

	"""
	Wfdf
	"""
	WFDF

	"""
	Wodf
	"""
	WODF

	"""
	Wpdf
	"""
	WPDF

	"""
	Prts
	"""
	PRTS
}

"""
Shipment delivery type code
"""
enum ShipmentDeliveryTypeCode {
	"""
	Fd
	"""
	FD

	"""
	Pd
	"""
	PD
}

"""
Shipment status code
"""
enum ShipmentStatusCode {
	"""
	Bmr
	"""
	BMR

	"""
	Bmt
	"""
	BMT

	"""
	Dex
	"""
	DEX

	"""
	Dtr
	"""
	DTR

	"""
	Htr
	"""
	HTR

	"""
	Otd
	"""
	OTD

	"""
	Otr
	"""
	OTR

	"""
	Pkd
	"""
	PKD

	"""
	Pkh
	"""
	PKH

	"""
	Pkm
	"""
	PKM

	"""
	Pkr
	"""
	PKR

	"""
	Rits
	"""
	RITS

	"""
	Rjct
	"""
	RJCT

	"""
	Rtrn
	"""
	RTRN

	"""
	Rts
	"""
	RTS

	"""
	Prp
	"""
	PRP

	"""
	Prpd
	"""
	PRPD

	"""
	Std
	"""
	STD

	"""
	Rcv
	"""
	RCV
}

input DateFilterInput {
	fromDays: Int
	fromDate: Date
	toDate: Date
}

type Shipment {
	id: Int!
	code: String!
	type: LookupEntry!
	openable: LookupEntry!
	date: DateTime!
	createdAt: DateTime!
	updatedAt: DateTime
	deliveryDate: Date
	deliveredOrReturnedDate: DateTime

	description: String
	weight: Float!
	piecesCount: Int!
	collected: Boolean!
	paidToCustomer: Boolean!
	paidToDeliveryAgent: Boolean!
	editable: Boolean!
	trackingUrl: String!
	deletable: Boolean!

	hasProducts: Boolean!
	inWarehouse: Boolean!
	unpacked: Boolean!
	refNumber: String
	notes: String
	adminNotes: String
	returnPiecesCount: Int
	paymentType: LookupEntry!
	priceType: LookupEntry!
	deliveryType: LookupEntry
	returnType: LookupEntry
	transactionType: TransactionType!
	branch: Branch!
	originBranch: Branch!
	status: LookupEntry!
	returnStatus: LookupEntry

	service: ShippingService!
	history: [Shipment!]!
	createdBy: User!
	updatedBy: User
	warehouseSection: WarehouseSection
	customerType: LookupEntry!
	attempts: Int
	cancellable: Boolean!
	cancelled: Boolean!

	price: Float!
	amount: Float!
	deliveryFees: Float!
	extraWeightFees: Float!
	collectionFees: Float!
	totalAmount: Float!
	deliveredAmount: Float!
	returningDueFees: Float!
	returnedValue: Float!
	allDueFees: Float!
	collectedFees: Float!
	customerDue: Float!
	collectedAmount: Float!
	pendingCollectionAmount: Float!
	returnFees: Float!
	postFees: Float!
	tax: Float!
	deliveryCommission: Float

	recipientName: String
	recipientPhone: String
	recipientMobile: String!
	recipientZone: Zone!
	recipientSubzone: Zone!
	recipientAddress: String!
	recipientPostalCode: String
	recipientLatitude: Float
	recipientLongitude: Float

	senderName: String
	senderPhone: String
	senderMobile: String
	senderZone: Zone
	senderSubzone: Zone
	senderAddress: String
	senderPostalCode: String
	senderLatitude: Float
	senderLongitude: Float

	deliveryOtp: String
	hasDeliveryOtp: Boolean!
	images: [Image]
}

type ShippingService {
	id: Int!
	code: String!
	name: String!
	days: Int!
	egsCode: String
	active: Boolean!
	branch: Branch
	shipmentTypes: [LookupEntry]
}

type TransactionType {
	id: Int!
	code: String!
	name: String!
	active: Boolean!
	type: LookupEntry
	sequence: Sequence
	branch: Branch
}

type Zone {
	id: Int!
	code: String!
	name: String!
	parent: Zone
	active: Boolean
	branch: Branch
	children: [Zone]
}

type Branch {
	id: Int!
	code: String!
	name: String!
	active: Boolean!
	main: Boolean!
	address: String
	phone: String
	fax: String
	country: Country
	state: State
	city: City
	area: Area
	warehouseSections: [WarehouseSection]
}

type WarehouseSection {
	id: Int!
	name: String!
	branch: Branch!
	active: Boolean!
	shipments: [Shipment]
}

type Area {
	id: Int!
	code: String!
	name: String!
	city: City!
}

type City {
	id: Int!
	code: String!
	name: String!
	state: State!
}

type State {
	id: Int!
	code: String!
	name: String!
	country: Country!
}

type Country {
	id: Int!
	code: String!
	name: String!
}

type Sequence {
	id: Int!
	code: String!
	name: String!
}

type Lookup {
	id: Int!
	code: String!
	name: String!
	entries: [LookupEntry]
}

type LookupEntry {
	id: Int!
	code: String!
	name: String!
	active: Boolean
	weight: Int!
	lookup: Lookup!
	mobileActive: Boolean
}

input ShipmentInput {
	id: Int
	code: String
	date: DateTime
	deliveryDate: Date
	description: String
	refNumber: String
	weight: Float
	size: BoxSizeInput
	piecesCount: Int
	returnPiecesCount: Int
	price: Float
	notes: String
	typeCode: ShipmentTypeCode
	priceTypeCode: ShipmentPriceTypeCode
	paymentTypeCode: ShipmentPaymentTypeCode
	openableCode: ShipmentOpenableCode
	shipmentProducts: [ShipmentProductInput]

	senderName: String
	senderZoneId: Int
	senderSubzoneId: Int
	senderPhone: String
	senderMobile: String
	senderAddress: String
	senderPostalCode: String
	senderLatitude: Float
	senderLongitude: Float

	recipientName: String
	recipientZoneId: Int!
	recipientSubzoneId: Int!
	recipientPhone: String!
	recipientMobile: String!
	recipientAddress: String!
	recipientLatitude: Float
	recipientLongitude: Float
}

input ShipmentProductInput {
	productId: Int!
	price: Float!
	quantity: Int!
	typeCode: ShipmentProductTypeCode
}

"""
Shipment product type code
"""
enum ShipmentProductTypeCode {
	"""
	In
	"""
	IN

	"""
	Out
	"""
	OUT
}

"""
Shipment openable code
"""
enum ShipmentOpenableCode {
	"""
	Y
	"""
	Y

	"""
	N
	"""
	N
}

"""
Shipment payment type code
"""
enum ShipmentPaymentTypeCode {
	"""
	Colc
	"""
	COLC

	"""
	Paid
	"""
	PAID

	"""
	Cash
	"""
	CASH

	"""
	Crdt
	"""
	CRDT

	"""
	Visa
	"""
	VISA
}

"""
Shipment price type code
"""
enum ShipmentPriceTypeCode {
	"""
	Excld
	"""
	EXCLD

	"""
	Incld
	"""
	INCLD
}

"""
Shipment type code
"""
enum ShipmentTypeCode {
	"""
	Fdp
	"""
	FDP

	"""
	Pdp
	"""
	PDP

	"""
	Ptp
	"""
	PTP

	"""
	Rts
	"""
	RTS

	"""
	Clc
	"""
	CLC
}

input BoxSizeInput {
	length: Float!
	width: Float!
	height: Float!
}

type DropDownEntry {
	id: Int
	code: String
	name: String
}

input LoginInput {
	username: String!
	password: String!
	rememberMe: Boolean! = true
	fcmToken: String
}

type UserWithToken {
	user: User!
	token: String!
	ttl: String!
}

type User {
	id: Int!
	username: String!
	active: Boolean!
	isSuper: Boolean!
	userBranches: [UserBranch]!
	roles: [Role!]!
	permissions: [Permission]!
}

type Role {
	id: Int!
	code: String!
	name: String!
	permissions: [Permission]!
	usersCount: Int!
}

type Permission {
	id: Int!
	name: String!
	slug: String!
}

type UserBranch {
	user: User!
	branch: Branch!
	default: Boolean!
}

input ListZonesFilterInput {
	name: String
	parentId: Int
	countryId: Int
	branchId: Int
	active: Boolean
	service: FilterZonesByServiceInput
}

input FilterZonesByServiceInput {
	serviceId: Int!
	customerId: Int
	customerTypeCode: CustomerTypeCode
	fromZoneId: Int
	fromSubzoneId: Int
}

"""
Customer type code
"""
enum CustomerTypeCode {
	"""
	Merchant
	"""
	MERCHANT

	"""
	Individual
	"""
	INDIVIDUAL

	"""
	Concierge
	"""
	CONCIERGE
}

input ListLookupEntriesFilterInput {
	code: String!
}
